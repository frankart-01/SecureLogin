"""altered id column

Revision ID: 0c7919e3321f
Revises: 
Create Date: 2025-09-23 13:07:46.285633

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0c7919e3321f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admins', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'system_admin'::character varying"))
        batch_op.alter_column('permissions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('is_superadmin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.drop_constraint(batch_op.f('admins_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('admins_created_by_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])
        batch_op.create_foreign_key(None, 'admins', ['created_by'], ['user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=40),
               existing_nullable=False)
        batch_op.alter_column('date_created',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.String(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('failed_attempt',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.create_unique_constraint(None, ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('failed_attempt',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('date_created',
               existing_type=sa.String(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('name',
               existing_type=sa.String(length=40),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('admins', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('admins_created_by_fkey'), 'admins', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(batch_op.f('admins_user_id_fkey'), 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.alter_column('is_superadmin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('permissions',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'system_admin'::character varying"))
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
